// Code generated by MockGen. DO NOT EDIT.
// Source: ./database/interface.go

// Package mock_database is a generated GoMock package.
package mock_database

import (
	context "context"
	models "github.com/bharathts07/pokke/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetLayout mocks base method
func (m *MockClient) GetLayout(ctx context.Context, view string) (models.Layout, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLayout", ctx, view)
	ret0, _ := ret[0].(models.Layout)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLayout indicates an expected call of GetLayout
func (mr *MockClientMockRecorder) GetLayout(ctx, view interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLayout", reflect.TypeOf((*MockClient)(nil).GetLayout), ctx, view)
}

// GetComponents mocks base method
func (m *MockClient) GetComponents(ctx context.Context, view string) ([]models.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComponents", ctx, view)
	ret0, _ := ret[0].([]models.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetComponents indicates an expected call of GetComponents
func (mr *MockClientMockRecorder) GetComponents(ctx, view interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComponents", reflect.TypeOf((*MockClient)(nil).GetComponents), ctx, view)
}
